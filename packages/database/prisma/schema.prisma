generator erd {
  provider = "prisma-erd-generator"
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                String    @id @default(uuid())
  userId            String
  type              String
  provider          String    @unique
  providerAccountId String    @unique
  refresh_token     String?
  access_token      String?
  expires_at        DateTime?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Pet           Pet[]
}

model VerificationToken {
  identifier String   @unique
  token      String   @unique
  expires    DateTime
}

enum Gender {
  MALE
  FEMALE
}

enum PetKind {
  DOG
  CAT
}

enum PetSize {
  SMALL
  MEDIUM
  LARGE
}

model Pet {
  id        String    @id @default(uuid())
  name      String
  kind      PetKind
  gender    Gender
  size      PetSize
  birthday  DateTime
  gotchaDay DateTime?
  avatar    String?
  createdAt DateTime  @default(now())
  owner     User      @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId   String
  breeds    Breed[]
}

model Breed {
  id   String @id @default(uuid())
  name String
  Pets Pet[]
}
